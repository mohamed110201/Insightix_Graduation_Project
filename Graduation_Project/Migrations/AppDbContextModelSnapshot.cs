// <auto-generated />
using System;
using Graduation_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Graduation_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("AlertRuleSequence");

            modelBuilder.Entity("Graduation_Project.Data.FunctionsData.CurrentMonitoringAttributesValues", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.Property<string>("MonitoringAttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.ToTable("CurrentMonitoringAttributesValues");
                });

            modelBuilder.Entity("Graduation_Project.Data.FunctionsData.MachineMonitoringData", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("MachineMonitoringData");
                });

            modelBuilder.Entity("Graduation_Project.Data.FunctionsData.MachineResourceConsumptionData", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("MachineResourceConsumptionData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Alerts", (string)null);

                    b.HasDiscriminator<string>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.AlertChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("AlertChangeLogs", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.AlertRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [AlertRuleSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Failure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Failure", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.FailurePrediction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FailurePredictions");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FailurePredictionCheckPoint")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("SystemId");

                    b.ToTable("Machines", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            MachineTypeId = 1001,
                            SerialNumber = "WSN001",
                            SystemId = 1001
                        });
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AIModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            AIModelName = "best_model_overall.h5",
                            Model = "Wr001",
                            Name = "Wrapper Machine"
                        });
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("MonitoringAttributeId");

                    b.ToTable("MachineTypeMonitoringAttributes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1001
                        },
                        new
                        {
                            Id = 2,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1002
                        },
                        new
                        {
                            Id = 3,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1003
                        },
                        new
                        {
                            Id = 4,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1004
                        },
                        new
                        {
                            Id = 5,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1005
                        },
                        new
                        {
                            Id = 6,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1006
                        },
                        new
                        {
                            Id = 7,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1007
                        },
                        new
                        {
                            Id = 8,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1008
                        },
                        new
                        {
                            Id = 9,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1009
                        },
                        new
                        {
                            Id = 10,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1010
                        },
                        new
                        {
                            Id = 11,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1011
                        },
                        new
                        {
                            Id = 12,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1012
                        },
                        new
                        {
                            Id = 13,
                            MachineTypeId = 1001,
                            MonitoringAttributeId = 1013
                        });
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("ResourceConsumptionAttributeId");

                    b.ToTable("MachineTypeResourceConsumptionAttributes", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonitoringAttributes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Name = "Flag roping",
                            Unit = "None"
                        },
                        new
                        {
                            Id = 1002,
                            Name = "Platform Position",
                            Unit = "degree"
                        },
                        new
                        {
                            Id = 1003,
                            Name = "Platform Motor frequency",
                            Unit = "HZ"
                        },
                        new
                        {
                            Id = 1004,
                            Name = "Temperature platform drive",
                            Unit = "degree"
                        },
                        new
                        {
                            Id = 1005,
                            Name = "Temperature slave drive",
                            Unit = "degree"
                        },
                        new
                        {
                            Id = 1006,
                            Name = "Temperature hoist drive",
                            Unit = "degree"
                        },
                        new
                        {
                            Id = 1007,
                            Name = "Tensione totale film",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 1008,
                            Name = "Current speed cart",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 1009,
                            Name = "Platform motor speed",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 1010,
                            Name = "Lifting motor speed",
                            Unit = "RPM"
                        },
                        new
                        {
                            Id = 1011,
                            Name = "Platform rotation speed",
                            Unit = "RPM"
                        },
                        new
                        {
                            Id = 1012,
                            Name = "Slave rotation speed",
                            Unit = "M/MIN"
                        },
                        new
                        {
                            Id = 1013,
                            Name = "Lifting speed rotation",
                            Unit = "M/MIN"
                        });
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("MonitoringAttributeId");

                    b.ToTable("MonitoringData", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceConsumptionAttributes", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("ResourceConsumptionAttributeId");

                    b.ToTable("ResourceConsumptionData", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.System", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Systems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            Name = "Wrapping System"
                        });
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAlert", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.Alert");

                    b.Property<int>("MonitorAttributeAlertRuleId")
                        .HasColumnType("int");

                    b.HasIndex("MonitorAttributeAlertRuleId");

                    b.HasDiscriminator().HasValue("Monitoring");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAlert", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.Alert");

                    b.Property<int>("ResourceConsumptionAttributeAlertRuleId")
                        .HasColumnType("int");

                    b.HasIndex("ResourceConsumptionAttributeAlertRuleId");

                    b.HasDiscriminator().HasValue("ResourceConsumption");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitorAttributeAlertRule", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.AlertRule");

                    b.Property<int>("MachineTypeMonitoringAttributeId")
                        .HasColumnType("int");

                    b.HasIndex("MachineTypeMonitoringAttributeId");

                    b.ToTable("MonitorAttributeAlertRules", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.AlertRule");

                    b.Property<int>("MachineTypeResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.HasIndex("MachineTypeResourceConsumptionAttributeId");

                    b.ToTable("ResourceConsumptionAttributeAlertRules", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Alert", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("Alerts")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.AlertChangeLog", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Alert", "Alert")
                        .WithMany("ChangeLogs")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Failure", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("Failures")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Machine", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.System", "System")
                        .WithMany("Machines")
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");

                    b.Navigation("System");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineType", "MachineType")
                        .WithMany("MachineTypeMonitoringAttributes")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.MonitoringAttribute", "MonitoringAttribute")
                        .WithMany("MachineTypeMonitoringAttributes")
                        .HasForeignKey("MonitoringAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");

                    b.Navigation("MonitoringAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineType", "MachineType")
                        .WithMany("MachineTypeResourceConsumptionAttributes")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.ResourceConsumptionAttribute", "ResourceConsumptionAttribute")
                        .WithMany("MachineTypeResourceConsumptionAttributes")
                        .HasForeignKey("ResourceConsumptionAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");

                    b.Navigation("ResourceConsumptionAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringData", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("MonitoringData")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.MonitoringAttribute", "MonitoringAttribute")
                        .WithMany("MonitoringData")
                        .HasForeignKey("MonitoringAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("MonitoringAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionData", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("ResourceConsumptionData")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.ResourceConsumptionAttribute", "ResourceConsumptionAttribute")
                        .WithMany("ResourceConsumptionData")
                        .HasForeignKey("ResourceConsumptionAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("ResourceConsumptionAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAlert", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MonitorAttributeAlertRule", "MonitorAttributeAlertRule")
                        .WithMany("Alerts")
                        .HasForeignKey("MonitorAttributeAlertRuleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MonitorAttributeAlertRule");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAlert", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", "ResourceConsumptionAttributeAlertRule")
                        .WithMany("Alerts")
                        .HasForeignKey("ResourceConsumptionAttributeAlertRuleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ResourceConsumptionAttributeAlertRule");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitorAttributeAlertRule", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", "MachineTypeMonitoringAttribute")
                        .WithMany("AlertRules")
                        .HasForeignKey("MachineTypeMonitoringAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineTypeMonitoringAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", "MachineTypeResourceConsumptionAttribute")
                        .WithMany("AlertRules")
                        .HasForeignKey("MachineTypeResourceConsumptionAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineTypeResourceConsumptionAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Alert", b =>
                {
                    b.Navigation("ChangeLogs");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Machine", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Failures");

                    b.Navigation("MonitoringData");

                    b.Navigation("ResourceConsumptionData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineType", b =>
                {
                    b.Navigation("MachineTypeMonitoringAttributes");

                    b.Navigation("MachineTypeResourceConsumptionAttributes");

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", b =>
                {
                    b.Navigation("AlertRules");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", b =>
                {
                    b.Navigation("AlertRules");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAttribute", b =>
                {
                    b.Navigation("MachineTypeMonitoringAttributes");

                    b.Navigation("MonitoringData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttribute", b =>
                {
                    b.Navigation("MachineTypeResourceConsumptionAttributes");

                    b.Navigation("ResourceConsumptionData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.System", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitorAttributeAlertRule", b =>
                {
                    b.Navigation("Alerts");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", b =>
                {
                    b.Navigation("Alerts");
                });
#pragma warning restore 612, 618
        }
    }
}
