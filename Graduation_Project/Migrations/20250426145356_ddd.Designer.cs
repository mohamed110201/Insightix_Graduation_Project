// <auto-generated />
using System;
using Graduation_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Graduation_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250426145356_ddd")]
    partial class ddd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("AlertRuleSequence");

            modelBuilder.Entity("Graduation_Project.Data.FunctionsData.CurrentMonitoringAttributesValues", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.Property<string>("MonitoringAttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.ToTable("CurrentMonitoringAttributesValues");
                });

            modelBuilder.Entity("Graduation_Project.Data.FunctionsData.MachineMonitoringData", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("MachineMonitoringData");
                });

            modelBuilder.Entity("Graduation_Project.Data.FunctionsData.MachineResourceConsumptionData", b =>
                {
                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.ToTable("MachineResourceConsumptionData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Alerts", (string)null);

                    b.HasDiscriminator<string>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.AlertChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlertId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.ToTable("AlertChangeLogs", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.AlertRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [AlertRuleSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Failure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("Failure", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.FailurePrediction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FailurePredictions");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FailurePredictionCheckPoint")
                        .HasColumnType("datetime2");

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("SystemId");

                    b.ToTable("Machines", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AIModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineTypes", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("MonitoringAttributeId");

                    b.ToTable("MachineTypeMonitoringAttributes", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("ResourceConsumptionAttributeId");

                    b.ToTable("MachineTypeResourceConsumptionAttributes", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonitoringAttributes", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("MonitoringAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("MonitoringAttributeId");

                    b.ToTable("MonitoringData", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceConsumptionAttributes", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.HasIndex("ResourceConsumptionAttributeId");

                    b.ToTable("ResourceConsumptionData", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.System", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Systems", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAlert", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.Alert");

                    b.Property<int>("MonitorAttributeAlertRuleId")
                        .HasColumnType("int");

                    b.HasIndex("MonitorAttributeAlertRuleId");

                    b.HasDiscriminator().HasValue("Monitoring");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAlert", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.Alert");

                    b.Property<int>("ResourceConsumptionAttributeAlertRuleId")
                        .HasColumnType("int");

                    b.HasIndex("ResourceConsumptionAttributeAlertRuleId");

                    b.HasDiscriminator().HasValue("ResourceConsumption");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitorAttributeAlertRule", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.AlertRule");

                    b.Property<int>("MachineTypeMonitoringAttributeId")
                        .HasColumnType("int");

                    b.HasIndex("MachineTypeMonitoringAttributeId");

                    b.ToTable("MonitorAttributeAlertRules", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", b =>
                {
                    b.HasBaseType("Graduation_Project.Data.Models.AlertRule");

                    b.Property<int>("MachineTypeResourceConsumptionAttributeId")
                        .HasColumnType("int");

                    b.HasIndex("MachineTypeResourceConsumptionAttributeId");

                    b.ToTable("ResourceConsumptionAttributeAlertRules", (string)null);
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Alert", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("Alerts")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.AlertChangeLog", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Alert", "Alert")
                        .WithMany("ChangeLogs")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alert");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Failure", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("Failures")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Machine", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.System", "System")
                        .WithMany("Machines")
                        .HasForeignKey("SystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");

                    b.Navigation("System");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineType", "MachineType")
                        .WithMany("MachineTypeMonitoringAttributes")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.MonitoringAttribute", "MonitoringAttribute")
                        .WithMany("MachineTypeMonitoringAttributes")
                        .HasForeignKey("MonitoringAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");

                    b.Navigation("MonitoringAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineType", "MachineType")
                        .WithMany("MachineTypeResourceConsumptionAttributes")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.ResourceConsumptionAttribute", "ResourceConsumptionAttribute")
                        .WithMany("MachineTypeResourceConsumptionAttributes")
                        .HasForeignKey("ResourceConsumptionAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineType");

                    b.Navigation("ResourceConsumptionAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringData", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("MonitoringData")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.MonitoringAttribute", "MonitoringAttribute")
                        .WithMany("MonitoringData")
                        .HasForeignKey("MonitoringAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("MonitoringAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionData", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.Machine", "Machine")
                        .WithMany("ResourceConsumptionData")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Data.Models.ResourceConsumptionAttribute", "ResourceConsumptionAttribute")
                        .WithMany("ResourceConsumptionData")
                        .HasForeignKey("ResourceConsumptionAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("ResourceConsumptionAttribute");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAlert", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MonitorAttributeAlertRule", "MonitorAttributeAlertRule")
                        .WithMany("Alerts")
                        .HasForeignKey("MonitorAttributeAlertRuleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MonitorAttributeAlertRule");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAlert", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", "ResourceConsumptionAttributeAlertRule")
                        .WithMany("Alerts")
                        .HasForeignKey("ResourceConsumptionAttributeAlertRuleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ResourceConsumptionAttributeAlertRule");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitorAttributeAlertRule", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", "MachineTypeMonitoringAttribute")
                        .WithMany("AlertRules")
                        .HasForeignKey("MachineTypeMonitoringAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineTypeMonitoringAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", b =>
                {
                    b.HasOne("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", "MachineTypeResourceConsumptionAttribute")
                        .WithMany("AlertRules")
                        .HasForeignKey("MachineTypeResourceConsumptionAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineTypeResourceConsumptionAttribute");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Alert", b =>
                {
                    b.Navigation("ChangeLogs");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.Machine", b =>
                {
                    b.Navigation("Alerts");

                    b.Navigation("Failures");

                    b.Navigation("MonitoringData");

                    b.Navigation("ResourceConsumptionData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineType", b =>
                {
                    b.Navigation("MachineTypeMonitoringAttributes");

                    b.Navigation("MachineTypeResourceConsumptionAttributes");

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeMonitoringAttribute", b =>
                {
                    b.Navigation("AlertRules");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MachineTypeResourceConsumptionAttribute", b =>
                {
                    b.Navigation("AlertRules");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitoringAttribute", b =>
                {
                    b.Navigation("MachineTypeMonitoringAttributes");

                    b.Navigation("MonitoringData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttribute", b =>
                {
                    b.Navigation("MachineTypeResourceConsumptionAttributes");

                    b.Navigation("ResourceConsumptionData");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.System", b =>
                {
                    b.Navigation("Machines");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.MonitorAttributeAlertRule", b =>
                {
                    b.Navigation("Alerts");
                });

            modelBuilder.Entity("Graduation_Project.Data.Models.ResourceConsumptionAttributeAlertRule", b =>
                {
                    b.Navigation("Alerts");
                });
#pragma warning restore 612, 618
        }
    }
}
